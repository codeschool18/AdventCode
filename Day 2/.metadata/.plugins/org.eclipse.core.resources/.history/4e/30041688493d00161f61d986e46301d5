import java.util.Scanner;
import java.util.ArrayList;
import java.io.File;
import java.io.IOException;
public class areaSurface extends easier{
	public static ArrayList<String> Dimensions;
	public static int totalArea = 0;
	public static int bowLength = 0;
	public static void main(String[] args){
		Load(new File("C:\\Dimensions.txt"));
	}
	public static void Load(File path){
		Dimensions = new ArrayList<String>();
		//String filePath = path;
		File file = path;
		try{
			Scanner in = new Scanner(file);
			while(in.hasNext()){
				Dimensions.add(in.next());
			}
			if(in != null){
				in.close();
			}
			//Convert();
		}
		catch(IOException e){
			print(e);
		}
		PrintFile();
	}
	public static void PrintFile(){
		for(int i = 0; i < Dimensions.size(); i++){
			String dime[] = Dimensions.get(i).split("x");
			int l = Integer.parseInt(dime[0]);
			int w = Integer.parseInt(dime[1]);
			int h = Integer.parseInt(dime[2]);
			
			int currentSurfaceArea = (2*(l*w) + 2*(w*h) + 2*(h*l));
			int areaOfSmallest = 0;
			int perOfSmallest = 0;
			
			if(l*w <= w*h && l*w <= h*l){
				areaOfSmallest = l*w;
			}else if(w*h <= l*w && w*h <= h*l){
				areaOfSmallest = w*h;
			}
			else if(h*l <= l*w && h*l <= w*h){
				areaOfSmallest = h*l;
			}
			
			if(2 * (l + w ) <= 2 *(w + h) && 2 *(w + l) <= 2 *(l + h)){
				perOfSmallest = 2 *(l + w);
			}else if(2 *(w + h) <= (l + l + w + w) && 2 *(w + h) <= 2 *(l + h)){
				perOfSmallest = 2 *(w + h);
			}
			else if(2 *(l + h) <= 2 *(w + l) && 2 *(l + h) <= 2 *(w + h)){
				perOfSmallest = 2 *(l + h);
			}
			
			totalArea += (currentSurfaceArea + areaOfSmallest);
			bowLength += (perOfSmallest + (l * w * h));
		}
		print(totalArea);
	}
}
